// Generated by CoffeeScript 2.5.1
(function() {
  var cfg, createprocessmodule, github, log, olog, ostr, pathHandler, print, recipe, repositoryTree, thingy;

  createprocessmodule = {
    name: "createprocessmodule"
  };

  //region modulesFromEnvironment
  github = null;

  repositoryTree = null;

  thingy = null;

  pathHandler = null;

  recipe = null;

  cfg = null;

  //endregion

  //region logPrintFunctions
  //#############################################################################
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["createprocessmodule"] != null) {
      console.log("[createprocessmodule]: " + arg);
    }
  };

  olog = function(o) {
    return log("\n" + ostr(o));
  };

  ostr = function(o) {
    return JSON.stringify(o, null, 4);
  };

  print = function(arg) {
    return console.log(arg);
  };

  //endregion
  //#############################################################################
  createprocessmodule.initialize = function() {
    log("createprocessmodule.initialize");
    recipe = allModules.recipemodule;
    github = allModules.githubhandlermodule;
    repositoryTree = allModules.repositorytreehandlermodule;
    thingy = allModules.thingymodule;
    pathHandler = allModules.pathhandlermodule;
    cfg = allModules.configmodule;
  };

  
  //region internalFunctions
  //endregion

  //region exposedFunctions
  createprocessmodule.execute = async function(thingyType, thingyName, path, configure) {
    var basePath, constructionPlan, result, thingyRecipe;
    log("createprocessmodule.execute");
    await cfg.checkUserConfig(configure);
    await pathHandler.prepareBasePath(path);
    thingyName = (await thingy.checkThingyName(thingyName));
    result = (await recipe.getRecipe(thingyType));
    thingyRecipe = result.recipe;
    thingyType = result.type;
    print(">> Constructing thingy " + thingyName + ":");
    constructionPlan = (await recipe.toConstructionPlan(thingyRecipe));
    basePath = pathHandler.basePath;
    await thingy.create(thingyName, thingyType, constructionPlan, basePath);
  };

  //endregion
  module.exports = createprocessmodule;

}).call(this);
